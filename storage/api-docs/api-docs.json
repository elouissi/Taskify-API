{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/Get_ALL_tasks": {
            "get": {
                "summary": "Get all tasks",
                "operationId": "d6af1a8666accfda7cc8cfcce398c531",
                "responses": {
                    "200": {
                        "description": "List of tasks"
                    }
                }
            }
        },
        "/api/Create_tasks": {
            "post": {
                "summary": "Create a new task",
                "operationId": "717b4148575a4683c03352eb47eb37e2",
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Task description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task created"
                    }
                }
            }
        },
        "/api/Show_task/{id}": {
            "get": {
                "summary": "Get a specific task",
                "operationId": "739dce9f9d9e6c4c4a746b993169cb69",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task found"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/Update_task/{id}": {
            "put": {
                "summary": "Update a specific task",
                "operationId": "1b2c0102022026c80c30ae898edb4ef9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Task description",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task updated"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/Delete_tasks/{id}": {
            "delete": {
                "summary": "Delete a specific task",
                "operationId": "c103d0af28600c44a19b11812ac4f058",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "summary": "Register a new user",
                "operationId": "73fd9b61dff4256cc0ee710de66723d9",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "Authenticate user and generate JWT token",
                "operationId": "bb5bdca9f30cb60a33c1ae936a833da2",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}